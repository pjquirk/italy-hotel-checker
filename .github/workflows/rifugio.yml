name: Checking Rifugio Availability

on:
  workflow_dispatch:
    inputs:
      month:
        description: 'Month to check availability (MM)'
        required: true
        default: '07' # July
      day:
        description: 'Day to check availability (DD)'
        required: true
        default: '07' # 7th
  schedule:
    - cron: '1 * * * *' # Every hour

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hostels: [
          { name: "Rifugio Fodara Vedla", url: "https://www.fodara.it/en#YxKQED1yBxB__", id: 12869 },
          { name: "Rifugio PederÃ¼", url: "https://www.pederue.it/en#Y7D0a11V", id: 10716 },
          { name: "Rifugio Fanes", url: "https://www.rifugiofanes.com/en/booking.htm", id: 13308 },
          { name: "Rifugio Lavarella", url: "https://lavarella.it/en/book-online", id: 13004 },
        ]
        guests: [1, 2]

    env:
      # Default to July 7th
      MONTH: ${{ github.event.inputs.month || '07'}}
      DAY: ${{ github.event.inputs.day || '07' }}

    steps:
      - name: Check for an open spot on given date
        id: check_availability
        run: |
          # Continue on error
          set +e

          EXPECTED_DATE="2025-${{ env.MONTH }}-${{ env.DAY }}"

          # Query the API for availability
          URL="https://api.widgets.bookingsuedtirol.com/v6/properties/${{ matrix.hostels.id }}/availabilities?from=2025-${{ env.MONTH }}-01&guests=%5B%5B18%${{ matrix.guests }}C18%5D%5D&sourceId=98&to=2025-${{ env.MONTH }}-31"
          curl -s "$URL" | jq -e -r '.[] | select(.date == "2025-${{ env.MONTH }}-${{ env.DAY }}") | .departures[] | select(.rule == "departure_possible") | .departure'

          # Append an output if the command succeeds
          if [[ $? -eq 0 ]]; then
            echo "The spot is available for $EXPECTED_DATE."
            echo "available=true" >> $GITHUB_OUTPUT

            MONTH_NAME=$(date -d "2025-${{ env.MONTH }}-${{ env.DAY }}" +'%B')
            echo "message=A spot is available for $MONTH_NAME ${{ env.DAY }} for ${{ matrix.guests }} guest(s) at: ${{ matrix.hostels.name }} (id: ${{ matrix.hostels.id }}). Book it at ${{ matrix.hostels.url }}" >> $GITHUB_OUTPUT
          else
            echo "No spot available for $EXPECTED_DATE."
            echo "available=false" >> $GITHUB_OUTPUT
          fi

      - name: Notify if the spot is available
        uses: appricos/pushinator-action@v1
        if: success() && steps.check_availability.outputs.available == 'true'
        with:
          apiToken: ${{ secrets.PUSHINATOR_API_TOKEN }}
          channelId: ${{ secrets.PUSHINATOR_CHANNEL_ID }}
          notification: ${{ steps.check_availability.outputs.message }}

